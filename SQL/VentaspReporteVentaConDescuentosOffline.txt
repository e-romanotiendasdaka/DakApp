SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Romano,Elvis>
-- Create date: <2023-11-01>
-- Description:	<Obtener Ventas Con Descuento Offline de Tienda>
-- =============================================
CREATE OR ALTER PROCEDURE VentaspReporteVentaConDescuentosOffline (@FechaInicio datetime, @FechaFin datetime, @IdAsesor varchar(max) = '', @Cajas varchar(max) = '', @IdArea varchar(max)='')
AS
BEGIN
SET NOCOUNT ON;
DECLARE @totalfacturas int =0, @totalnotascredito int= 0
DECLARE @TotalSalesLogs TABLE (IdRegistro INT identity(1,1),IdLogIntegracion int,Data nvarchar(max))
DECLARE @Invoice TABLE (IdRegistro INT IDENTITY(1,1),IdLogIntegracion INT,IdMovimiento bigint,IdSucursal int,IdCaja int,IdRecogidaCaja int,IdArea int,IdEstatus int,
        IdUsuario bigint,IdAfiliacion bigint,IdVendedor bigint,SerialFiscal varchar(50),CodigoCaja smallint,NumeroOperacion int,Operacion varchar(24),NumeroFactura bigint,
        CajaFactura varchar(10),NumeroControl bigint,CantidadProductos int,Puntos decimal(18,8),GuiaLicor int,Observaciones varchar(200),PuntosClub money,MontoTotal decimal(18,8),
        MontoIva decimal(18,8),MontoImpuesto1 decimal(18,8),MontoImpuesto2 decimal(18,8),MontoDescuento decimal(18,8),MontoExento decimal(18,8), MontoPagado decimal(18,8),
        FactorConversion decimal(18,8),IndMultiplicar bit,Fecha datetime,FechaInicio datetime,FechaFin datetime,FechaInicioFormaPago datetime,FechaFinFormaPago datetime,    
	    IndLogIntegracion bit)
DECLARE @InvoiceDetails TABLE (IdRegistro INT IDENTITY(1,1),IdLogIntegracion INT,IdDetalle bigint,IdMovimiento bigint,IdSucursal int,IdCaja int,IdArea int,IdProducto bigint,
        IdEmpaque bigint,IdProveedor bigint,IdCategoria int,IdDescuento int,IdTasaImpuesto int,BarraEmpaque varchar(50),NumeroUnidades numeric(18,8),Entradas decimal(18,8),
        Salidas decimal(18,8),CostoBase numeric(18,8),CostoConversion numeric(18,8),CostoNetoBase numeric(18,8),CostoNetoConversion numeric(18,8),CostoNetoVentaBase numeric(18,8),
        CostoNetoVentaConversion numeric(18,8),PVPBase numeric(18,8),PVPConversion numeric(18,8),FactorNeto numeric(18,8),FactorNetoVenta numeric(18,8),FactorVenta numeric(18,8),
        Descuento numeric(18,8),TasaImpuesto decimal(18,8),Iva decimal(18,8),Abonos decimal(18,8),PuntosClub money,Serial varchar(50),TipoEntradaDatos varchar(10),
        Fecha datetime,Garantia numeric,IdAsesor bigint)
DECLARE @InvoiceOperations TABLE(IdRegistros int identity(1,1),IdLogIntegracion int,IdRegistro bigint,IdMovimiento bigint,IdSucursal int,IdCaja int,IdArea int,IdProducto bigint,IdEmpaque bigint,
        IdDescuento int,IdUsuario bigint,IdUsuarioAutorizado bigint,IdAccesoxModulo bigint,IdMotivo bigint,CajaFactura varchar(10),MontoDescuento money,Observaciones varchar(MAX),
        FechaOcurrencia datetime)	
DECLARE @filtros TABLE (IdRegistro int identity(1,1),IdLogIntegracion int,IdMovimiento bigint,IdSucursal int,IdCaja int,IdArea int,IdAsesor bigint)
DECLARE @VendorsData TABLE (IdRegistro int identity(1,1),IdAsesor BIGINT)

DECLARE @CashRegisterData TABLE (IdRegistro int identity(1,1),IdCaja bigint)
DECLARE @AreaData TABLE (IdRegistro int identity(1,1),IdArea bigint)
DECLARE @InvoicesData TABLE (IdRegistro int identity(1,1),NumFactura varchar(10))

INSERT INTO @VendorsData
SELECT value FROM STRING_SPLIT(@IdAsesor, ',');	 

INSERT INTO @CashRegisterData
SELECT value FROM STRING_SPLIT(@Cajas, ',');

INSERT INTO @AreaData
SELECT value FROM STRING_SPLIT(@IdArea, ',');

INSERT INTO @TotalSalesLogs
SELECT ls.IdLogIntegracion, ls.Data 
FROM POS_MDW.Integracion.LogIntegraciones ls WITH(NOLOCK) 
WHERE ls.IdTipoLog = 1 AND ls.NumeroFactura > 0 
AND ls.IdCaja <> ISNULL((SELECT ISNULL(C.IdCaja, 0) FROM ERP_POS_CENTRAL.ConfiguracionPOS.Cajas C WITH(NOLOCK) WHERE C.SerialImpresora = 'CAJAKLK'), 0)
AND (((SELECT JSDATA.Fecha FROM OPENJSON((SELECT FACTURAS FROM OPENJSON(Data) WITH (Facturas nvarchar(MAX) '$.Facturas' AS JSON)))WITH (Fecha datetime '$.Fecha')JSDATA) between @FechaInicio AND @FechaFin) OR @FechaInicio='' OR @FechaFin='')	

;WITH CteFacturas AS(
	SELECT A.IdLogIntegracion,B.Facturas
	FROM @TotalSalesLogs A
	CROSS APPLY ( SELECT * FROM OPENJSON(Data) WITH (Facturas nvarchar(MAX) '$.Facturas' AS JSON)) B
)
INSERT INTO @Invoice ([IdLogIntegracion],[IdMovimiento],[IdSucursal],[IdCaja],[IdRecogidaCaja],[IdArea],[IdEstatus],[IdUsuario],[IdAfiliacion],[IdVendedor],[SerialFiscal],[CodigoCaja],[NumeroOperacion],
			[Operacion],[NumeroFactura],[CajaFactura],[NumeroControl],[CantidadProductos],[Puntos],[GuiaLicor],[Observaciones],[PuntosClub],[MontoTotal],[MontoIva],[MontoImpuesto1],[MontoImpuesto2],
			[MontoDescuento],[MontoExento],[MontoPagado],[FactorConversion],[IndMultiplicar],[Fecha],[FechaInicio],[FechaFin],[FechaInicioFormaPago],[FechaFinFormaPago],[IndLogIntegracion])
SELECT A.IdLogIntegracion,B.IdMovimiento,B.IdSucursal,B.IdCaja,B.IdRecogidaCaja,B.IdArea,B.IdEstatus,B.IdUsuario,B.IdAfiliacion,B.IdVendedor,B.SerialFiscal,B.CodigoCaja,B.NumeroOperacion,
	   B.Operacion,B.NumeroFactura,B.CajaFactura,B.NumeroControl,B.CantidadProductos,B.Puntos,B.GuiaLicor,B.Observaciones,B.PuntosClub,B.MontoTotal,B.MontoIva,B.MontoImpuesto1,
	   B.MontoImpuesto2,B.MontoDescuento,B.MontoExento,B.MontoPagado,B.FactorConversion,B.IndMultiplicar,B.Fecha,B.FechaInicio,B.FechaFin,B.FechaInicioFormaPago,B.FechaFinFormaPago,
	   B.IndLogIntegracion
FROM CteFacturas A
CROSS APPLY ( SELECT * FROM OPENJSON(Facturas) WITH (IdMovimiento bigint,IdSucursal int,IdCaja int,IdRecogidaCaja bigint,IdArea int,IdEstatus int,IdUsuario bigint,IdAfiliacion bigint,
IdVendedor bigint,SerialFiscal varchar(50),CodigoCaja smallint,NumeroOperacion int,Operacion varchar(24),NumeroFactura bigint,CajaFactura varchar(10),NumeroControl bigint,
CantidadProductos int,Puntos decimal(18,8),GuiaLicor int,Observaciones varchar(200),PuntosClub money,MontoTotal decimal(18,8),MontoIva decimal(18,8),MontoImpuesto1 decimal(18,8),
MontoImpuesto2 decimal(18,8),MontoDescuento decimal(18,8),MontoExento decimal(18,8),MontoPagado decimal(18,8),FactorConversion decimal(18,8),
IndMultiplicar bit,Fecha datetime,FechaInicio datetime,FechaFin datetime,FechaInicioFormaPago datetime,FechaFinFormaPago datetime,IndLogIntegracion bit)) B

;WITH CteFacturasDetalle AS(
	SELECT A.IdLogIntegracion,B.DetalleFacturas
	FROM @TotalSalesLogs A
	CROSS APPLY ( SELECT * FROM OPENJSON(Data) WITH (DetalleFacturas nvarchar(MAX) '$.DetalleFacturas' AS JSON)) B
)
INSERT INTO @InvoiceDetails([IdLogIntegracion],[IdDetalle],[IdMovimiento],[IdSucursal],[IdCaja],[IdArea],[IdProducto],[IdEmpaque],[IdProveedor], [IdCategoria],[IdDescuento],
			[IdTasaImpuesto],[BarraEmpaque],[NumeroUnidades],[Entradas],[Salidas],[CostoBase],[CostoConversion],[CostoNetoBase],[CostoNetoConversion],[CostoNetoVentaBase],
			[CostoNetoVentaConversion],[PVPBase],[PVPConversion],[FactorNeto],[FactorNetoVenta],[FactorVenta],[Descuento],[TasaImpuesto],[Iva],[Abonos],[PuntosClub],[Serial],
			[TipoEntradaDatos],[Fecha],[Garantia],[IdAsesor])
SELECT A.IdLogIntegracion,B.IdDetalle,B.IdMovimiento,B.IdSucursal,B.IdCaja,B.IdArea,B.IdProducto,B.IdEmpaque,B.IdProveedor,B.IdCategoria,B.IdDescuento,B.IdTasaImpuesto,B.BarraEmpaque,
	   B.NumeroUnidades,B.Entradas,B.Salidas,B.CostoBase,B.CostoConversion,B.CostoNetoBase,B.CostoNetoConversion,B.CostoNetoVentaBase,B.CostoNetoVentaConversion,B.PVPBase,B.PVPConversion,
	   B.FactorNeto,B.FactorNetoVenta,B.FactorVenta,B.Descuento,B.TasaImpuesto,B.Iva,0,B.PuntosClub,B.Serial,B.TipoEntradaDatos,B.Fecha,ISNULL(B.Garantia,0),ISNULL(B.IdAsesor,-1)
FROM CteFacturasDetalle A
CROSS APPLY ( SELECT * FROM OPENJSON(DetalleFacturas) WITH (IdDetalle bigint,IdMovimiento bigint,IdSucursal int,IdCaja int,IdArea int,IdProducto bigint,IdEmpaque bigint,IdProveedor bigint,
IdCategoria int,IdDescuento int,IdTasaImpuesto int,BarraEmpaque varchar(50),NumeroUnidades numeric(18,8),Entradas numeric(18,8),Salidas numeric(18,8),CostoBase numeric(18,8),
CostoConversion numeric(18,8),CostoNetoBase numeric(18,8),CostoNetoConversion numeric(18,8),CostoNetoVentaBase numeric(18,8),CostoNetoVentaConversion numeric(18,8),PVPBase numeric(18,8),PVPConversion numeric(18,8),
FactorNeto numeric(18,8),FactorNetoVenta numeric(18,8),FactorVenta numeric(18,8),Descuento numeric(18,8),TasaImpuesto decimal(18,8),Iva decimal(18,8),PuntosClub money,Serial varchar(50),
TipoEntradaDatos varchar(10),Fecha datetime,Garantia numeric,IdAsesor bigint)) B

;WITH CteOperacionesFacturas AS(
	SELECT A.IdLogIntegracion,B.OperacionesFacturas
	FROM @TotalSalesLogs A
	CROSS APPLY ( SELECT * FROM OPENJSON(Data) WITH (OperacionesFacturas nvarchar(MAX) '$.OperacionesFacturas' AS JSON)) B
)
INSERT INTO @InvoiceOperations([IdLogIntegracion],[IdRegistro],[IdMovimiento],[IdSucursal],[IdCaja],[IdArea],[IdProducto],[IdEmpaque],[IdDescuento],[IdUsuario],[IdUsuarioAutorizado],[IdAccesoxModulo],
			[IdMotivo],[CajaFactura],[MontoDescuento],[Observaciones],[FechaOcurrencia])
SELECT A.IdLogIntegracion,B.IdRegistro,B.IdMovimiento,B.IdSucursal,B.IdCaja,B.IdArea,B.IdProducto,B.IdEmpaque,B.IdDescuento,B.IdUsuario,B.IdUsuarioAutorizado,B.IdAccesoxModulo,B.IdMotivo,B.CajaFactura,
	   B.MontoDescuento,B.Observaciones,B.FechaOcurrencia
FROM CteOperacionesFacturas A
CROSS APPLY (SELECT * FROM OPENJSON(OperacionesFacturas) WITH(IdRegistro bigint,IdMovimiento bigint,IdSucursal int,IdCaja int,IdArea int,IdProducto bigint,IdEmpaque bigint,IdDescuento int,
IdUsuario bigint,IdUsuarioAutorizado bigint,IdAccesoxModulo bigint,IdMotivo bigint,CajaFactura varchar(10),MontoDescuento money,Observaciones varchar(MAX),FechaOcurrencia datetime)) B

INSERT INTO @filtros ([IdLogIntegracion],[IdMovimiento],[IdSucursal],[IdCaja],[IdArea],[IdAsesor])
SELECT DISTINCT i.IdLogIntegracion,i.IdMovimiento,i.IdSucursal,i.IdCaja,id.IdArea,id.IdAsesor
FROM @Invoice i
INNER JOIN @InvoiceDetails id ON i.IdMovimiento = id.IdMovimiento AND i.IdCaja = id.IdCaja AND i.IdSucursal = id.IdSucursal
WHERE (((CASE WHEN (id.IdAsesor IN (-1,0,1)) THEN -1 ELSE id.IdAsesor END) IN (SELECT IdAsesor FROM @VendorsData) ) OR (@IdAsesor=''))
AND ((id.IdArea IN (SELECT IdArea FROM @AreaData)) OR @IdArea = '')

SET @totalfacturas =  (SELECT count(idLogIntegracion)-COUNT(CASE WHEN i.MontoTotal < 0 THEN 1 END) 
					   FROM @Invoice i 
					   WHERE ( (i.IdCaja IN (SELECT IdCaja FROM @CashRegisterData)) OR (@Cajas = '')) AND (i.IdEstatus <> 46) AND
					   (i.NumeroControl > 0) AND ((i.Fecha between @FechaInicio AND @FechaFin) OR @FechaInicio='' OR @FechaFin='') and ABS(MontoDescuento) > 0 )
SET @totalnotascredito = (SELECT SUM(IIF(MontoTotal<0,1,0)) 
						  FROM @Invoice i 
						  WHERE ((i.IdCaja IN (SELECT IdCaja From @CashRegisterData)) OR (@Cajas = '')) 
						  AND (i.IdEstatus <> 46) AND (i.NumeroControl > 0) AND ((i.Fecha between @FechaInicio AND @FechaFin) OR @FechaInicio='' OR @FechaFin='') and ABS(MontoDescuento) > 0)

SELECT  Cabecera.IdSucursalSAP AS idsucursalsap,Cabecera.Sucursal AS sucursal,Cabecera.NroFact AS [nrofactura],Cabecera.NroNC as [nronotacredito],Cabecera.NroFactAfectada AS [nrofacturaafectada], 
		Cabecera.Fecha AS fecha,Cabecera.CI AS [cicliente],Cabecera.NombreCliente AS [nombrecliente],Cabecera.Caja AS caja,Cabecera.basebruta AS [basebruta],Cabecera.basebrutaUSD AS [basebrutausd],
		Cabecera.Dcto AS descuento,Cabecera.DctoUSD AS descuentousd,Cabecera.baseneta AS baseneta,Cabecera.basenetaUSD AS basenetausd,Cabecera.IVA AS iva,Cabecera.IVAUSD AS ivausd,
		Cabecera.[Total Documento] AS totaldocumento,Cabecera.TDUSD AS totaldocumentousd,Cabecera.PersonaAutoriza AS personaautorizadescuento,Cabecera.MotivoDescuento AS motivodescuento,
		@totalfacturas as totalfacts,@totalnotascredito as totalnc,Cabecera.Detalle
FROM (SELECT CASE WHEN i.MontoTotal < 0 THEN '' ELSE  i.CajaFactura  END AS NroFact, CASE WHEN i.MontoTotal < 0 THEN i.CajaFactura ELSE '' END AS NroNC, 
	  CASE WHEN i.MontoTotal < 0 THEN tasa.CajaFacturaOrigen ELSE '' END AS NroFactAfectada,i.Fecha,UPPER(s.Sucursal) AS Sucursal,ISNULL(s.ClaveExterna,'') AS IdSucursalSAP,
	  IIF(i.IdAfiliacion=0,i.Observaciones,UPPER(td.Identificador)+'-'+cli.Cedula) AS CI,
	  IIF(i.IdAfiliacion=0, 'CLIENTE PENDIENTE POR INTEGRACION',UPPER(cli.Nombre) + ' ' + UPPER(cli.Apellido)) AS NombreCliente,
	  UPPER(c.Descripcion) AS Caja,SUM(IIF(i.MontoTotal<0,-1,1)*(ABS(IIF(i.MontoTotal<0,id.Entradas,id.Salidas)*id.PVPBase))) AS basebruta,
	  SUM(IIF(i.MontoTotal<0,-1,1)*( (ABS(IIF(i.MontoTotal<0,id.Entradas,id.Salidas)*id.PVPBase))/IIF(i.MontoTotal<0,tasa.FactorConversion,i.FactorConversion) )) AS basebrutaUSD,
	  SUM(IIF(i.MontoTotal<0,-1,1)*( (ABS(IIF(i.MontoTotal<0,id.Entradas,id.Salidas)*id.PVPBase))-ISNULL(ABS(id.Descuento),0) )) AS baseneta,
	  SUM(IIF(i.MontoTotal<0,-1,1)*( ((ABS(IIF(i.MontoTotal<0,id.Entradas,id.Salidas)*id.PVPBase))-ISNULL(ABS(id.Descuento),0))/IIF(i.MontoTotal<0,tasa.FactorConversion,i.FactorConversion) )) AS basenetaUSD,
	  SUM(IIF(i.MontoTotal<0,-1,1)*( (ABS(IIF(i.MontoTotal<0,id.Entradas,id.Salidas)*id.PVPBase)) + ISNULL(ABS(id.Iva),0) - ISNULL(ABS(id.Descuento),0) )) AS [Total Documento] ,
	  SUM(IIF(i.MontoTotal<0,-1,1)*ISNULL(ABS(id.Descuento),0)) AS Dcto, 
	  SUM((IIF(i.MontoTotal<0,-1,1)*ISNULL(ABS(id.Descuento),0))/ IIF(i.MontoTotal<0,tasa.FactorConversion,i.FactorConversion)) AS DctoUSD,SUM(ISNULL(id.Iva,0)) AS IVA,
	  SUM(ISNULL(id.Iva,0)/ IIF(i.MontoTotal<0,tasa.FactorConversion,i.FactorConversion)) AS IVAUSD,
	  SUM(IIF(i.MontoTotal<0,-1,1)*( ( (ABS(IIF(i.MontoTotal<0,id.Entradas,id.Salidas)*id.PVPBase)) + ISNULL(ABS(id.Iva),0) - ISNULL(ABS(id.Descuento),0) )/IIF(i.MontoTotal<0,tasa.FactorConversion,i.FactorConversion) )) AS TDUSD,
	  UPPER(mo.Motivo) AS MotivoDescuento,UPPER(enti.Nombre) + ' ' + UPPER(enti.Apellido) AS PersonaAutoriza,
	  JSON_QUERY((SELECT Detalle.Fecha AS fechafactura,Detalle.NroFact AS nrofactura,Detalle.Cliente AS cliente,Detalle.SAP AS [codigosapdelarticulo],Detalle.Nombre AS [nombredelarticulo],
		Detalle.Asesores AS asesor,Detalle.CIAsesores AS ciasesor,Detalle.PrecioBruto AS preciobruto,Detalle.PrecioBrutoUSD AS preciobrutousd,Detalle.PrecioNeto AS [precioneto],
		Detalle.PrecioNetoUSD AS [precionetousd],Detalle.IVA AS [ivafacturadoporarticulo],Detalle.IVAUSD AS [ivafacturadoporarticuloenusd],Detalle.Descuento AS [montodescuento],
		Detalle.Descuentousd AS montodescuentoenusd,Detalle.Descuentoporc AS descuentoporcentaje,Detalle.MontoTotal AS montototal,Detalle.MontoTotalUSD AS montototalusd,Detalle.Cantidad AS cantidad,
		Detalle.IdArea AS [idarea],Detalle.Ubicacion AS [ubicacionlogisticadelarticulo],Detalle.Serial AS [serialfacturadodelarticulo]
		FROM (SELECT id.Fecha, (SELECT IIF(i.IdAfiliacion=0, 'CLIENTE PENDIENTE POR INTEGRACION',UPPER(cli.Nombre) + ' ' + UPPER(cli.Apellido)) FROM ERP_CRM.dbo.CLU_ClientesAfiliados clia WITH(NOLOCK) 
		LEFT JOIN ERP_CRM.dbo.MSTG_Entidades cliente WITH(NOLOCK) ON clia.Cod_Entidad = cliente.Cod_Entidad WHERE i.IdAfiliacion = clia.Cod_SigoClub) AS Cliente,
		CASE WHEN i.MontoTotal < 0 THEN tasa.CajaFactura COLLATE SQL_Latin1_General_CP1_CI_AS ELSE i.CajaFactura END AS NroFact,ISNULL(p.ClaveExterna,'') AS SAP,UPPER(p.Nombre) AS Nombre,
		id.Serial AS Serial,IIF((id.IdAsesor IN (-1,0,1)),'SIN ASESOR ASIGNADO',UPPER(e.Nombre)+' '+UPPER(e.Apellido)) AS Asesores,IIF((id.IdAsesor IN (-1,0,1)),'N/D',UPPER(td.Identificador)+'-'+e.NumeroDocumento) AS CIAsesores,
		CASE WHEN SUM(i.MontoDescuento) > 0 AND i.MontoTotal < 0 THEN ABS(ISNULL(id.Descuento,0)) * -1 ELSE CASE WHEN (SUM(i.MontoDescuento) > 0 AND i.MontoTotal > 0) THEN ISNULL(id.Descuento,0) ELSE 0 END END AS Descuento,
		CASE WHEN SUM(i.MontoDescuento) > 0 AND i.MontoTotal < 0 THEN ABS(ISNULL(id.Descuento,0)/tasa.FactorConversion) * -1 ELSE CASE WHEN (SUM(i.MontoDescuento) > 0 AND i.MontoTotal > 0) THEN ISNULL(id.Descuento,0)/i.FactorConversion ELSE 0 END END AS Descuentousd,
   		CASE WHEN (SUM(i.MontoDescuento) > 0 AND i.MontoTotal < 0) THEN ((ABS(ISNULL(id.Descuento,0))/ABS(id.PVPBase * id.Entradas)) *-1)*100  ELSE CASE WHEN (SUM(i.MontoDescuento) > 0 AND i.MontoTotal > 0) THEN (ISNULL(id.Descuento,0)/ABS(id.PVPBase * id.Salidas))*100 ELSE 0 END END AS Descuentoporc,
		CASE WHEN i.MontoTotal < 0 THEN (ABS(id.PVPBase * id.Entradas) ) * -1 ELSE (id.PVPBase * id.Salidas)  END AS PrecioBruto,		
		CASE WHEN i.MontoTotal < 0 THEN ((ABS(id.PVPBase * id.Entradas) )/tasa.FactorConversion) * -1 ELSE ((id.PVPBase * id.Salidas) )/i.FactorConversion END  AS PrecioBrutoUSD,
		CASE WHEN i.MontoTotal < 0 THEN (ABS(id.PVPBase * id.Entradas)  - ABS(ISNULL(id.Descuento,0))) * -1 ELSE (id.PVPBase * id.Salidas)  - ISNULL(id.Descuento,0) END AS PrecioNeto,		
		CASE WHEN i.MontoTotal < 0 THEN ((ABS(id.PVPBase * id.Entradas) - ABS(ISNULL(id.Descuento,0)))/tasa.FactorConversion) * -1 ELSE ((id.PVPBase * id.Salidas) - ISNULL(id.Descuento,0))/i.FactorConversion END  AS PrecioNetoUSD,			
		CASE WHEN i.MontoTotal < 0 THEN (ABS(id.PVPBase * id.Entradas) + ABS(ISNULL(id.Iva,0)) - ABS(ISNULL(id.Descuento,0))) * -1 ELSE (id.PVPBase * id.Salidas) + ISNULL(id.Iva,0) - ISNULL(id.Descuento,0) END AS MontoTotal,		
		CASE WHEN i.MontoTotal < 0 THEN ((ABS(id.PVPBase * id.Entradas) + ABS(ISNULL(id.Iva,0)) - ABS(ISNULL(id.Descuento,0)))/tasa.FactorConversion) * -1 ELSE ((id.PVPBase * id.Salidas) + ISNULL(id.Iva,0) - ISNULL(id.Descuento,0))/i.FactorConversion END  AS MontoTotalUSD,
		CASE WHEN i.MontoTotal < 0 THEN ABS(ISNULL(id.Iva,0)) * -1 ELSE ISNULL(id.Iva,0) END  AS [IVA],
		CASE WHEN i.MontoTotal < 0 THEN (ABS(ISNULL(id.Iva,0))/tasa.FactorConversion) * -1 ELSE ISNULL(id.Iva,0)/ i.FactorConversion END AS IVAUSD,
		CASE WHEN i.MontoTotal < 0 THEN tasa.FactorConversion ELSE i.FactorConversion END FactorConversion,
		CASE WHEN i.MontoTotal < 0 THEN CAST (id.Entradas AS INT) * -1  ELSE CAST(id.Salidas AS int) END AS Cantidad,id.IdArea,UPPER(a.Area) as Ubicacion
		FROM @InvoiceDetails id 
		INNER JOIN ERP_MPC.Transaccional.Productos p  WITH(NOLOCK) ON id.IdProducto = p.IdProducto
		LEFT JOIN (SELECT JSON_VALUE(Data,'$[0].Facturas[0].FactorConversion') FactorConversion, df.CajaFactura CajaFactura, df.CajaFacturaOrigen CajaFacturaOrigen
		FROM POS_MDW.Integracion.DevolucionesFacturas df WITH(NOLOCK)
		INNER JOIN POS_MDW.Integracion.LogIntegraciones li ON CONCAT((SELECT CodigoCaja FROM ERP_POS_CENTRAL.ConfiguracionPOS.Cajas WHERE IdCaja = li.IdCaja),  '-' , li.NumeroFactura) = df.CajaFacturaOrigen) tasa ON tasa.CajaFactura = i.CajaFactura					 
		LEFT JOIN ERP.Seguridad.Usuarios u WITH(NOLOCK) ON id.IdAsesor = u.IdUsuario
		LEFT JOIN ERP.Maestro.Entidades e WITH(NOLOCK) ON u.IdEntidad = e.IdEntidad
		LEFT JOIN ERP.Maestro.TiposDocumentos td WITH(NOLOCK) ON td.IdTipoDocumento = e.IdTipoDocumento	
		INNER JOIN ERP.Maestro.Areas a WITH(NOLOCK) ON a.IdArea = id.IdArea
		WHERE (id.IdMovimiento = i.IdMovimiento AND i.IdCaja = id.IdCaja AND id.IdSucursal = i.IdSucursal AND id.IdLogIntegracion= i.IdLogIntegracion)
		AND (((CASE WHEN (id.IdAsesor IN (-1,0,1)) THEN -1 ELSE id.IdAsesor END) IN (SELECT IdAsesor FROM @VendorsData) ) OR (@IdAsesor=''))
		AND ((id.IdArea IN (SELECT IdAsesor FROM @AreaData)) OR @IdArea ='')) AS Detalle FOR JSON PATH)) AS Detalle
		FROM  @Invoice i
		INNER JOIN @InvoiceDetails id ON i.IdMovimiento= id.IdMovimiento AND i.IdCaja = id.IdCaja AND i.IdLogIntegracion = id.IdLogIntegracion
		LEFT JOIN ERP_CRM.dbo.CLU_ClientesAfiliados ca WITH(NOLOCK) ON i.IdAfiliacion = ca.Cod_SigoClub
		LEFT JOIN ERP_CRM.dbo.MSTG_Entidades cli WITH(NOLOCK) ON ca.Cod_Entidad = cli.Cod_Entidad 
		LEFT JOIN ERP.Maestro.TiposDocumentos td WITH (NoLock) ON td.IdTipoDocumento = cli.Cod_Tipo
		LEFT JOIN (SELECT JSON_VALUE(Data,'$[0].Facturas[0].FactorConversion') FactorConversion, df.CajaFactura CajaFactura, df.CajaFacturaOrigen CajaFacturaOrigen
				   FROM POS_MDW.Integracion.DevolucionesFacturas df WITH(NOLOCK)
				   INNER JOIN POS_MDW.Integracion.LogIntegraciones li WITH(NOLOCK) ON CONCAT((SELECT CodigoCaja 
				   FROM ERP_POS_CENTRAL.ConfiguracionPOS.Cajas WHERE IdCaja = li.IdCaja),  '-' , li.NumeroFactura) = df.CajaFacturaOrigen) tasa ON tasa.CajaFactura = i.CajaFactura		  
				   INNER JOIN (SELECT DISTINCT IdLogIntegracion FROM @filtros) f ON f.IdLogIntegracion = i.IdLogIntegracion
		INNER JOIN ERP_POS_CENTRAL.ConfiguracionPOS.Cajas c WITH(NOLOCK) ON c.IdCaja = i.IdCaja
		INNER JOIN ERP.Maestro.Areas a WITH (NOLOCK) ON a.IdArea = i.IdArea
		INNER JOIN ERP.Maestro.Sucursales s WITH (NOLOCK) ON s.IdSucursal = i.IdSucursal		  
		INNER JOIN @InvoiceOperations iop ON i.IdMovimiento = iop.IdMovimiento AND i.IdCaja = iop.IdCaja and i.IdArea = iop.IdArea AND ABS(iop.MontoDescuento) > 0
		INNER JOIN ERP.Maestro.Motivos mo WITH(NOLOCK) ON mo.IdMotivo = iop.IdMotivo
		INNER JOIN ERP.Seguridad.Usuarios usu WITH(NOLOCK) ON usu.IdUsuario = iop.IdUsuario
		INNER JOIN ERP.Maestro.Entidades enti WITH(NOLOCK) ON enti.IdEntidad = usu.IdEntidad
		WHERE ((i.IdCaja IN (SELECT IdCaja From @CashRegisterData)) OR (@Cajas = '')) AND (i.IdEstatus <> 46) AND (i.NumeroControl > 0) AND (i.MontoDescuento > 0)  AND
		(i.Fecha between @FechaInicio AND @FechaFin OR (@FechaInicio = '' OR @FechaFin = ''))
		GROUP BY i.IdLogIntegracion,i.IdMovimiento, i.IdCaja,i.IdSucursal,i.FactorConversion, i.MontoTotal,i.CajaFactura,i.CajaFactura,tasa.CajaFacturaOrigen,
		i.Fecha,UPPER(s.Sucursal),s.ClaveExterna,i.IdAfiliacion,i.Observaciones,UPPER(td.Identificador)+'-'+cli.Cedula,UPPER(cli.Nombre)+ ' ' +UPPER(cli.Apellido),
		UPPER(Descripcion), i.FactorConversion, tasa.FactorConversion, UPPER(mo.Motivo), UPPER(enti.Nombre) + ' ' + UPPER(enti.Apellido)) AS Cabecera 
FOR JSON PATH
END
GO
